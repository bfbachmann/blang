mod runtime

use "std/libc" @libc

pub fn panic(msg: str) {
    let panic_str = "panic: "
    let iovecs = [
        @libc.IOVec{
            base_ptr: panic_str.ptr()
            iov_len: panic_str.len()
        },
        @libc.IOVec{
            base_ptr: msg.ptr()
            iov_len: msg.len()
        },
        @libc.IOVec{
            base_ptr: "\n".ptr()
            iov_len: 1
        },
    ]
    @libc.writev(@libc.stderr, &iovecs as *@libc.IOVec, 3)

    const max_frames: uint = 512
    let frame_buf = &mut [null; max_frames] as *mut *u8
    let num_frames = @libc.backtrace(frame_buf, max_frames)
    @libc.backtrace_symbols_fd(frame_buf, num_frames, @libc.stderr)
    @libc.abort()
}

pub fn assert(cond: bool, msg: str) {
    if !cond {
        panic(msg)
    }
}