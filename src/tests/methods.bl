extern fn exit(code: i64)

fn assert(b: bool, code: i64) {
    if !b {
        exit(code)
    }
}

struct T {
    value: i64
}

impl T {
    fn get_value(this) ~ i64 {
        return this.value
    }

    fn new(value: i64) ~ T {
        return T{value: value}
    }
}

impl i64 {
    fn mul(this, v: i64) ~ i64 {
        return this * v
    }

    fn add(this, v: i64) ~ i64 {
        return this + v
    }
}

fn main() {
    let t = T{value: 23}
    assert(t.get_value() == 23, 1)
    
    let two = 2
    assert(two.mul(5).add(10).add(1) == 21, 2)

    let new_t = T.new(-52)
    assert(new_t.get_value().mul(-2) == 104, 4)

    exit(0)
}
