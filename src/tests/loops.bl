fn assert(b: bool, exit_code: i64) {
    if !b {
        exit(exit_code)
    }
}

// Checks that there are 25 primes between 1 and 100 (inclusive).
fn main() {
    let n = 0
    let prime_count = 0

    loop {
        n = n + 1
        if n > 100 {
            break
        }
        
        // 0 and 1 are not prime
        if n <= 1 {
            continue
        }

        // 2 and 3 are prime
        if n <= 3 {
            prime_count = prime_count + 1
            continue
        }

        // Divisible by 2 or 3
        if n % 2 == 0 || n % 3 == 0 {
            continue
        }
    
        let i = 5
        let prime = true
        loop {
            if i * i > n {
                break
            }

            if n % i == 0 || n % (i + 2) == 0 {
                prime = false
                break
            }

            // Check divisibility for numbers of the form 6k +/- 1
            i = i + 6
        }
    
        if prime {
            prime_count = prime_count + 1
        }
    }

    assert(prime_count == 25, 1)

    exit(0)
}