use "test_utils.bl"

const {
    INT = -50
    STRUCT = struct{i: i64, b: bool}{
        i: 987
        b: false
    }
    STRUCT_I = STRUCT.i
    TUPLE = {345, true}
    PTR = NULL
    OTHER_INT = INT + 1
    ENUM_ERR = Result::Err("failed")
    STR = "Hello world! 你好世界\n"
    SAME_STRS = STR == "Hello world! 你好世界\n"
}

enum Result {
    Ok
    Err(str)
}

fn main() {
    assert(INT == -50, 1)
    assert(STRUCT.i == 987, 2)
    assert(STRUCT.b == false, 3)
    assert(TUPLE.0 == 345, 4)
    assert(TUPLE.1 == true, 5)
    assert(PTR == NULL, 6)
    assert(OTHER_INT == INT + 1, 7)
    assert(ENUM_ERR ~== Result::Err("failed"), 8)
    assert(SAME_STRS, 9)
    assert(STR != "not the same", 10)
    assert(STRUCT_I == 987, 11)

    // Make sure constant declaration is allows inside functions.
    const THING: str = "test"
    assert(THING == "test", 12)

    exit(0)
}
