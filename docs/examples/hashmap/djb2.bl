use {Slice}: "std/types/slice.bl"
use {BuildHash}: "std/types/hasher.bl"

/// Implements the DJB2 hash function.
pub struct DJB2Hasher {
    hash: u64
}

const initial_hash: u64 = 5381

impl DJB2Hasher {
    pub fn new() -> DJB2Hasher {
        return DJB2Hasher{
            hash: initial_hash
        }
    }
}

impl DJB2Hasher: BuildHash {
    pub fn reset(*mut self) {
        self^.hash = initial_hash
    }

    pub fn write(*mut self, bytes: Slice[u8]) {
        for let mut i = 0uint, i < bytes.len(), i += 1 {
            let c = bytes.ptr_at(i)^ as u64
            self^.hash = ((self^.hash bls 5uint) + self^.hash) + c
        }
    }

    pub fn sum(*self) -> u64 {
        return self^.hash
    }
}